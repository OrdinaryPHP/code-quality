name: "Build, test, and deploy"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  push:
    branches:
      - dev
    tags:
      - '**'
  pull_request:
permissions:
  contents: read
  packages: write
jobs:
  build-push:
    strategy:
      matrix:
        php-version: [ "8.2" ]
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{vars.DOCKERHUB_USER}}/${{github.event.repository.name}}
            ghcr.io/${{vars.DOCKERHUB_USER}}/${{github.event.repository.name}}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha,prefix=sha-short-
            type=sha,format=long,prefix=sha-long-
            type=ref,event=branch,prefix=branch-
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          flavor: |
            suffix=-php${{matrix.php-version}}
      - name: Get ghcr.io first tag
        id: ghcrtag
        run: echo "GHCR_TAG=$(echo "$DOCKER_METADATA_OUTPUT_TAGS" | grep sha-long- | grep ^ghcr.io/)" >> "$GITHUB_OUTPUT"
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{vars.DOCKERHUB_USER}}
          password: ${{secrets.DOCKERHUB_TOKEN}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
    outputs:
      ghcr-tag: ${{steps.ghcrtag.outputs.GHCR_TAG}}
  code-quality:
    needs: [ build-push ]
    uses: ./.github/workflows/code-quality.yml
    with:
      image: ${{needs.build-push.outputs.ghcr-tag}}
